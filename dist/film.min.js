(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Film"] = factory();
	else
		root["Film"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DEFAULT_OPTS = {
  frameWidth: null,
  framesPerView: 3,
  speed: 20
};

var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (cb) {
  return setTimeout(cb, 16);
};

var caf = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.msCancelAnimationFrame || window.clearTimeout;

var Film = function () {
  function Film(el, opts) {
    _classCallCheck(this, Film);

    this.el = el;
    this.opts = Object.assign({}, DEFAULT_OPTS, opts);
    this.frames = [];

    this.initWrapper();

    var children = el.querySelectorAll('.film__frame');

    for (var i = 0; i < children.length; i++) {
      var child = children[i];
      this.initFrame(child, i);
      this.frames.push(child);
    }

    this.start();
  }

  _createClass(Film, [{
    key: 'initWrapper',
    value: function initWrapper() {
      this.el.style['overflow'] = 'hidden';
    }
  }, {
    key: 'initFrame',
    value: function initFrame(frame, i) {
      if (this.opts.frameWidth) {
        frame.moveVal = i * this.opts.frameWidth;
        frame.style.width = this.opts.frameWidth + 'px';
      } else {
        var winW = window.innerWidth;
        frame.moveVal = i * winW / this.opts.framesPerView;
        frame.style.width = 'calc(100vw / ' + this.opts.framesPerView;
      }

      frame.style.position = 'absolute';
      frame.style.transform = 'translateX(' + frame.moveVal + 'px)';
      frame.style.height = '100%';
      frame.style['z-index'] = i;
    }
  }, {
    key: 'start',
    value: function start() {
      var _this = this;

      this.reqId = raf(function () {
        return _this.update();
      });
    }
  }, {
    key: 'stop',
    value: function stop() {
      if (this.reqId) {
        caf(this.reqId);
        this.reqId = null;
      }
    }
  }, {
    key: 'refresh',
    value: function refresh() {
      var _this2 = this;

      this.stop();
      this.frames.forEach(function (frame, i) {
        _this2.initFrame(frame, i);
      });
      this.start();
    }
  }, {
    key: 'update',
    value: function update() {
      var _this3 = this;

      var mutates = [];
      var speed = this.opts.speed / 16;

      // batch dom reads
      this.frames.forEach(function (frame, i) {
        frame.moveVal -= speed;

        if (frame.moveVal + frame.clientWidth < 0) {
          var lastFrameIndex = i === 0 ? i = _this3.frames.length - 1 : i - 1;
          var lastFrame = _this3.frames[lastFrameIndex];
          frame.moveVal = Math.floor(lastFrame.moveVal + lastFrame.clientWidth - speed - 1);
        }

        mutates.push(function () {
          frame.style.transform = 'translateX(' + frame.moveVal + 'px)';
        });
      });

      // batch dom writes
      mutates.forEach(function (mutate) {
        return mutate();
      });

      this.reqId = raf(function () {
        return _this3.update();
      });
    }
  }]);

  return Film;
}();

exports.default = Film;

/***/ })
/******/ ]);
});